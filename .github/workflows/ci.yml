name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety flake8 black mypy pytest coverage

      # Step 4: Set PYTHONPATH
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      # Step 5: Code quality checks
      - name: Lint with flake8
        run: flake8 .

      - name: Check formatting with black
        run: black --check .

      - name: Type check with mypy
        run: mypy todo_app/

      # Step 6: Security checks
      - name: Dependency vulnerability check with safety
        run: safety check -r requirements.txt

      # Step 7: Run tests with pytest and coverage
      - name: Run tests with pytest and coverage
        run: pytest --cov=todo_app --cov-report=xml --cov-report=html

      # Step 8: Upload XML coverage report
      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      # Step 9: Upload HTML coverage report
      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: html-coverage
          path: htmlcov
